@name QMon
@inputs S:string U:wirelink
@outputs Oscil Elements:array
@persist [Max ThrottleTick K A Con Use SwitchCheck I CheckIfUser] [RetArray]:array
@persist [Elements_target O UE CE E]:entity FltType:string

if(first())
{
    function echo(Str:string) {print(Str)}

    function init()
    {
        A = 0
        Elements = array()
        RetArray = array()

        Use = 0
        Oscil = 0
        I = 0

        CheckIfUser=0

        Max=50
        K=1
        ThrottleTick=1

        E=entity()
        O=owner()

        concmd("wire_user_range 9000")
        if(duped()){entity():propDelete()}
        concmd("wire_user_model models/jaanus/wiretool/wiretool_range.mdl")

        print(4,"Welcome to QMon v2")
        echo("0. Money printer CB1")
        echo("1. Money printer CB3")
        echo("2. Money printer CB5")
        echo("3. Money printer RC1")
        echo("4. Spawned Money")
        echo("5. Spawned Weapon")
        echo("6. DZG Shipment")
        echo("7. Ammo")
        echo("8. Sent (heal) Ball")
        echo("9. Gmod Button")
        echo("A. Wire Button")
        echo("B. Func Button")
        echo("C. Func Door")
        echo("D. Prop Door Rotating")
        echo("E. DarkRP Money Pot")
        echo("F. ATM")
        echo("G. Vipammo")
        echo("H. Players (except owner)")
        echo("I. Owner")
        echo("J. Known seats")
        echo("K. Known cars")
    }

    function print_status(){
        if(A){
            setName("QMon"+toChar(10)+"WORKING")
        }elseif(!A){
            setName("QMon"+toChar(10)+"IDLE")
        }
    }

    function add_elements(){Elements=Elements:add(findToArray())}
    function number d(Str:string) {return (S:find(Str:upper())>0)}

    function array array:flt(){
        K=1
        RetArray:clear()
        while(K<=This:count()){
            FltType=This[K,entity]:type()
            if(FltType:find("money")|FltType:find("printer")){
               RetArray = RetArray:add(array(This[K,entity]))
            }
            K++
        }
        return RetArray
    }

    function vector entity:tpos(){
        if(This:massCenter()!=vec(0,0,0)){
            return This:massCenter()-vec(0,0,1)
        } elseif(This:massCenter()==vec(0,0,0)) {
            return This:pos()-vec(0,0,1)
        }
    }

    function number entity:isUser()
    {
        return This:type():lower():find("user")>0
    }

    function number switched() {return Use&$Use&O:aimEntity()==entity()}

    init()
    print_status()
}

interval(25)

Oscil=!Oscil
Con=->U
Use=O:keyAttack2()
CE=E:isConstrainedTo()
if(CE:isUser())
{
    U = CE:wirelink()
}

if(switched()){
    SwitchCheck=0
    if(!A){
        if(!Con){
            echo("Error: User was not connected")
            SwitchCheck++
        }

        if(CheckIfUser&!U:entity():isUser()&Con){
            echo("Error: Connected device is not user")
            SwitchCheck++
        }

        if(S==""){
            echo("Error: 'S' data was not declared")
            SwitchCheck++
        }
    }

    if(SwitchCheck==0){
        A=!A
        if(A){
            UE=U:entity()
            UE:createWire(entity(),"Fire","Oscil")
            UE:setColor(vec4(random(255),random(255),random(255),0))
            entity():setColor(vec4(random(255),random(255),random(255),0))
        }
        else
        {
            UE:propDelete()
        }

        print_status()
    }
}

if(A){
    if(!Con){
        A=0
        entity():setColor(vec4(255,255,255,255))
    }

    ThrottleTick++
    I++

    if(K>Elements:count()&ThrottleTick>Max){
        Elements:clear()

        if(d("0")){
            findByModel("models/props_c17/consolebox01a.mdl")
            add_elements()
        }

        if(d("1")){
            findByModel("models/props_c17/consolebox03a.mdl")
            add_elements()
        }

        if(d("2")){
            findByModel("models/props_c17/consolebox05a.mdl")
            add_elements()
        }

        if(d("3")){
            findByModel("models/props_lab/reciever01a.mdl")
            add_elements()
        }

        if(d("4")){
            findByClass("spawned_money")
            add_elements()
        }

        if(d("5")){
            findByClass("spawned_weapon")
            add_elements()
        }

        if(d("6")){
            findByClass("dzg_shipment")
            add_elements()
        }

        if(d("7")){
            findByClass("ammo")
            add_elements()
        }

        if(d("8")){
            findByClass("sent_ball")
            add_elements()
        }

        if(d("9")){
            findByClass("gmod_button")
            add_elements()
        }

        if(d("A")){
            findByClass("wire_button")
            add_elements()
            findByClass("gmod_wire_button")
            add_elements()
        }

        if(d("B")){
            findByClass("func_button")
            add_elements()
        }

        if(d("C")){
            findByClass("func_door")
            add_elements()
        }

        if(d("D")){
            findByClass("prop_door_rotating")
            add_elements()
        }

        if(d("E")){
            findByClass("darkrp_moneypot")
            add_elements()
        }

        if(d("F")){
            findByClass("atm_machine")
            add_elements()
        }

        if(d("G")){
            findByClass("vipammo")
            add_elements()
        }

        if(d("H")){
            findByClass("player")
            findExcludeEntity(owner())
            add_elements()
        }

        if(d("I")){
            Elements=Elements:add(array(owner()))
        }

        if(d("J")){
            findByClass("prop_vehicle_prisoner_pod")
            add_elements()
            findByClass("Seat_Airboat")
            add_elements()
            findByClass("phx_seat")
            add_elements()
            findByClass("phx_seat1")
            add_elements()
            findByClass("phx_seat2")
            add_elements()
            findByClass("phx_seat3")
            add_elements()
            findByClass("Chair_Plastic")
            add_elements()
            findByClass("Seat_Jalopy")
            add_elements()
            findByClass("Seat_Jeep")
            add_elements()
            findByClass("Chair_Office1")
            add_elements()
            findByClass("Chair_Office2")
            add_elements()
            findByClass("Chair_Wood")
            add_elements()
            findByClass("Pod")
            add_elements()
        }

        if(d("K")){
            findByClass("Airboat")
            add_elements()
            findByClass("Jeep")
            add_elements()
        }

        K=1
        ThrottleTick=0
    }

    if(K<=Elements:count()&I>=2){
        #print("Goto ["+Elements_target:id()+"]"+Elements_target:type()+"]")
        Elements_target=Elements[K,entity]
        UE:setAng(ang(360,0,0))
        UE:setPos(Elements_target:tpos())
        K++
        I=0
    } else {
        UE:setPos(vec(0,0,0))
    }
}
