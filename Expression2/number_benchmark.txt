@name Number Benchmark
@inputs A
@outputs Out
@persist PrevA
@persist Eps MantBits P
@persist X Prev Count Emax ExpBits Tmp
@persist TotalBits Bytes
@persist Pow2Emax MaxVal
@persist Pow2MinNormal MinSubnormal I

# Run once per rising-edge on A
if (first())
{
    PrevA = 0
    Out = 0
}

if (A && !PrevA)
{
    # ---- 1) Find machine epsilon and mantissa bits (explicit fraction bits)
    Eps = 1
    MantBits = 0
    while (1 + Eps / 2 > 1)
    {
        Eps = Eps / 2
        MantBits = MantBits + 1
    }
    P = MantBits + 1  # total significand precision incl. hidden bit

    # ---- 2) Find maximum usable power-of-two and Emax
    X = 1
    Prev = X
    Count = 0
    while (X * 2 > X)
    {
        Prev = X
        X = X * 2
        Count = Count + 1
    }
    Emax = Count - 1       # last finite exponent
    Pow2Emax = Prev        # equals 2^Emax

    # ---- 3) Infer exponent-bit width from Emax
    Tmp = Emax + 1
    ExpBits = 0
    while (Tmp > 0)
    {
        Tmp = floor(Tmp / 2)
        ExpBits = ExpBits + 1
    }

    # ---- 4) Totals and bytes
    TotalBits = 1 + ExpBits + MantBits
    Bytes = floor((TotalBits + 7) / 8)

    # ---- 5) Largest finite value: (2 - 2^-MantBits) * 2^Emax
    MaxVal = (2 - Eps) * Pow2Emax

    # ---- 6) A little extra: smallest normals / subnormals (derived, not assumed)
    Pow2MinNormal = 1
    I = 0
    while (I < Emax - 1)
    {
        Pow2MinNormal = Pow2MinNormal / 2
        I = I + 1
    }

    MinSubnormal = Pow2MinNormal
    I = 0
    while (I < MantBits)
    {
        MinSubnormal = MinSubnormal / 2
        I = I + 1
    }

    # ---- Output and prints
    Out = MaxVal

    print("=== E2 Number Introspection ===")
    print("Machine epsilon near 1: " + Eps)
    print("Mantissa bits (explicit fraction): " + MantBits)
    print("Significand precision p (incl. hidden bit): " + P)
    print("Max normal exponent Emax: " + Emax)
    print("Estimated exponent bits: " + ExpBits)
    print("Total bits (sign + exp + frac): " + TotalBits)
    print("Bytes used by number: " + Bytes)
    print("2^Emax: " + Pow2Emax)
    print("Largest finite value: " + MaxVal)
    print("Smallest positive NORMAL value: " + Pow2MinNormal)
    print("Smallest positive SUBNORMAL value: " + MinSubnormal)
    print("Out set to the largest finite value.")
}

PrevA = A
